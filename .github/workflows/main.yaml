name: Build and deploy lydia-radgiver-frontend
on: [push]

env:
  IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}
jobs:
  e2e:
    name: "e2e"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        working-directory: client
        run: npm install
      - name: Start Storybook server
        working-directory: client
        run: npm run storybook &
      - name: Cypress run
        uses: cypress-io/github-action@v4
        env:
          CYPRESS_BASE_URL: http://localhost:6006/
        with:
          working-directory: e2e
          wait-on: 'http://localhost:6006'
  build:
    name: Build, lint, test and push docker image
    runs-on: ubuntu-latest
    needs: e2e
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: Install deps server
        working-directory: server
        run: npm ci
      - name: Run server tests
        working-directory: server
        run: npm run test
      - name: Install deps client
        working-directory: client
        run: npm ci
      - name: Run client tests
        working-directory: client
        run: npm run test
      - name: Lint and build frontend
        working-directory: client
        run: npm run build
      - name: Build frackend
        working-directory: server
        run: npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/${{ github.repository }}:latest,${{ env.IMAGE }}
          context: .

  deployAppToDev:
    name: Deploy app to dev
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/endre-paginering'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploy to DEV
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais.yaml
          VARS: .nais/dev.yaml

  deployAppToProd:
    name: Deploy app to prod
    needs: deployAppToDev
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploy to PROD
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: .nais/nais.yaml
          VARS: .nais/prod.yaml

name: Build and deploy lydia-radgiver-frontend
on: [push]

jobs:
  build:
    permissions:
      id-token: "write"
    name: Build, lint, test and push docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          registry-url: "https://npm.pkg.github.com"
      - name: Install deps server
        working-directory: server
        run: npm ci
      - name: Run server tests
        working-directory: server
        run: npm run test
      - name: Install deps client
        working-directory: client
        run: npm ci --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: Run client tests
        working-directory: client
        run: npm run test
      - name: Lint and build frontend
        working-directory: client
        run: npm run build
      - name: Build frackend
        working-directory: server
        run: npm run build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push docker image
        uses: nais/docker-build-push@v0
        id: docker-push
        with:
          team: pia
          tag: latest
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
    outputs:
      image: ${{ steps.docker-push.outputs.image }}

  deploy:
    permissions: {}
    strategy:
      matrix:
        cluster: [dev, prod]
    name: Deploy app to ${{ matrix.cluster }}
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploy to ${{ matrix.cluster }}
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: ${{ matrix.cluster }}-gcp
          RESOURCE: .nais/nais.yaml
          VARS: .nais/${{ matrix.cluster }}.yaml
          VAR: image=${{ needs.build.outputs.image }}


  deploy-branch-to-dev:
    permissions: {}
    name: Deploy app to dev
    needs: build
    if: github.ref == 'refs/heads/graf-panel-til-historisksykefraver'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploy to dev
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais.yaml
          VARS: .nais/dev.yaml
          VAR: image=${{ needs.build.outputs.image }}
